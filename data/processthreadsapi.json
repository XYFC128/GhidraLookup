{"functions": [{"name": "GetProcessHeap", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/heapapi/nf-heapapi-getprocessheap", "description": "Retrieves a handle to the default heap of the calling process. This handle can then be used in subsequent calls to the heap functions.", "parameters": []}, {"name": "GetProcessHeaps", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/heapapi/nf-heapapi-getprocessheaps", "description": "Returns the number of active heaps and retrieves handles to all of the active heaps for the calling process.", "parameters": [{"name": "NumberOfHeaps", "type": "", "description": "The maximum number of heap handles that can be stored into the buffer pointed to by ProcessHeaps."}, {"name": "ProcessHeaps", "type": "", "description": "A pointer to a buffer that receives an array of heap handles."}]}, {"name": "HeapAlloc", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/heapapi/nf-heapapi-heapalloc", "description": "Allocates a block of memory from a heap. The allocated memory is not movable.", "parameters": [{"name": "hHeap", "type": "", "description": "A handle to the heap from which the memory will be allocated. This handle is returned by the\nHeapCreate or\nGetProcessHeap function."}, {"name": "dwFlags", "type": "", "description": "The heap allocation options. Specifying any of these values will override the corresponding value specified when the heap was created with\nHeapCreate. This parameter can be one or more of the following values."}, {"name": "dwBytes", "type": "", "description": "The number of bytes to be allocated."}]}, {"name": "HeapCompact", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/heapapi/nf-heapapi-heapcompact", "description": "Returns  the size of the largest committed free block in the specified heap.   If the Disable heap coalesce on free global flag is set, this function also coalesces adjacent free blocks of memory in the heap.", "parameters": [{"name": "hHeap", "type": "", "description": "A handle to the heap. This handle is returned by either the\nHeapCreate or\nGetProcessHeap function."}, {"name": "dwFlags", "type": "", "description": "The heap access options. This parameter can be the following value."}]}, {"name": "HeapCreate", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/heapapi/nf-heapapi-heapcreate", "description": "Creates a private heap object that can be used by the calling process. The function reserves space in the virtual address space of the process and allocates physical storage for a specified initial portion of this block.", "parameters": [{"name": "flOptions", "type": "", "description": "The heap allocation options. These options affect subsequent access to the new heap through calls to the heap functions. This parameter can be 0 or one or more of the following values."}, {"name": "dwInitialSize", "type": "", "description": "The initial size of the heap, in bytes. This value determines the initial amount of memory that is committed for the heap. The value is rounded up to a multiple of the system page size. The value must be smaller than dwMaximumSize."}]}, {"name": "HeapDestroy", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/heapapi/nf-heapapi-heapdestroy", "description": "Destroys the specified heap object.\nIt decommits and releases all the pages of a private heap object, and it invalidates the handle to the heap.", "parameters": [{"name": "hHeap", "type": "", "description": "A handle to the heap to be destroyed. This handle is returned by the\nHeapCreate function. Do not use the handle to the process heap returned by the\nGetProcessHeap function."}]}, {"name": "HeapFree", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/heapapi/nf-heapapi-heapfree", "description": "Frees a memory block allocated from a heap by the\nHeapAlloc or\nHeapReAlloc function.", "parameters": [{"name": "hHeap", "type": "", "description": "A handle to the heap whose memory block is to be freed. This handle is returned by either the\nHeapCreate or\nGetProcessHeap function."}, {"name": "dwFlags", "type": "", "description": "The heap free options. Specifying the following value overrides the corresponding value specified in the flOptions parameter when the heap was created by using the\nHeapCreate function."}, {"name": "lpMem", "type": "", "description": "A pointer to the memory block to be freed. This pointer is returned by the\nHeapAlloc or\nHeapReAlloc function. This pointer can be NULL."}]}, {"name": "HeapLock", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/heapapi/nf-heapapi-heaplock", "description": "Attempts to acquire the critical section object, or lock, that is associated with a specified heap.", "parameters": [{"name": "hHeap", "type": "", "description": "A handle to the heap to be locked. This handle is returned by either the\nHeapCreate or\nGetProcessHeap function."}]}, {"name": "HeapQueryInformation", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/heapapi/nf-heapapi-heapqueryinformation", "description": "Retrieves information about the specified heap.", "parameters": [{"name": "HeapHandle", "type": "", "description": "A handle to the heap whose information is to be retrieved. This handle is returned by either the\nHeapCreate or\nGetProcessHeap function."}, {"name": "HeapInformationClass", "type": "", "description": "The class of information to be retrieved. This parameter can be the following value from the HEAP_INFORMATION_CLASS enumeration type."}, {"name": "HeapInformation", "type": "", "description": "A pointer to a buffer that receives the heap information. The format of this data depends on the value of the HeapInformationClass parameter."}, {"name": "HeapInformationLength", "type": "", "description": "The size of the heap information being queried, in bytes."}, {"name": "ReturnLength", "type": "", "description": "A pointer to a variable that receives the length of data written to the HeapInformation buffer. If the buffer is too small, the function fails and ReturnLength specifies the minimum size required for the buffer."}]}, {"name": "HeapReAlloc", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/heapapi/nf-heapapi-heaprealloc", "description": "Reallocates a block of memory from a heap. This function enables you to resize a memory block and change other memory block properties. The allocated memory is not movable.", "parameters": [{"name": "hHeap", "type": "", "description": "A handle to the heap from which the memory is to be reallocated. This handle is a returned by either the\nHeapCreate or\nGetProcessHeap function."}, {"name": "dwFlags", "type": "", "description": "The heap reallocation options. Specifying a value overrides the corresponding value specified in the flOptions parameter when the heap was created by using the\nHeapCreate function. This parameter can be one or more of the following values."}, {"name": "lpMem", "type": "", "description": "A pointer to the block of memory that the function reallocates. This pointer is returned by an earlier call to the\nHeapAlloc or\nHeapReAlloc function."}, {"name": "dwBytes", "type": "", "description": "The new size of the memory block, in bytes. A memory block's size can be increased or decreased by using this function."}]}, {"name": "HeapSetInformation", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/heapapi/nf-heapapi-heapsetinformation", "description": "Enables features for a specified heap.", "parameters": [{"name": "HeapHandle", "type": "", "description": "A handle to the heap where information is to be set. This handle is returned by either the\nHeapCreate or\nGetProcessHeap function."}, {"name": "HeapInformationClass", "type": "", "description": "The class of information to be set. This parameter can be one of the following values from the\nHEAP_INFORMATION_CLASS enumeration type."}, {"name": "HeapInformation", "type": "", "description": "The heap information buffer. The format of this data depends on the value of the\nHeapInformationClass parameter."}]}, {"name": "HeapSize", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/heapapi/nf-heapapi-heapsize", "description": "Retrieves the size of a memory block allocated from a heap by the\nHeapAlloc or\nHeapReAlloc function.", "parameters": [{"name": "hHeap", "type": "", "description": "A handle to the heap in which the memory block resides. This handle is returned by either the\nHeapCreate or\nGetProcessHeap function."}, {"name": "dwFlags", "type": "", "description": "The heap size options. Specifying the following value overrides the corresponding value specified in the\nflOptions parameter when the heap was created by using the\nHeapCreate function."}, {"name": "lpMem", "type": "", "description": "A pointer to the memory block whose size the function will obtain. This is a pointer returned by the\nHeapAlloc or\nHeapReAlloc function. The memory block must\nbe from the heap specified by the hHeap parameter."}]}, {"name": "HeapSummary", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/heapapi/nf-heapapi-heapsummary", "description": "Summarizes the specified heap.", "parameters": [{"name": "hHeap", "type": "", "description": "A handle to the heap to be summarized. This handle is returned by either the\nHeapCreate or\nGetProcessHeap function."}, {"name": "dwFlags", "type": "", "description": "The heap summary options."}, {"name": "lpSummary", "type": "", "description": "Receives a pointer to a Heap_Summary structure representing the heap summary."}]}, {"name": "HeapUnlock", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/heapapi/nf-heapapi-heapunlock", "description": "Releases ownership of the critical section object, or lock, that is associated with a specified heap. It reverses the action of the\nHeapLock function.", "parameters": [{"name": "hHeap", "type": "", "description": "A handle to the heap to be unlocked. This handle is returned by either the\nHeapCreate or\nGetProcessHeap function."}]}, {"name": "HeapValidate", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/heapapi/nf-heapapi-heapvalidate", "description": "Validates the specified heap. The function scans all the memory blocks in the heap and verifies that the heap control structures maintained by the heap manager are in a consistent state. You can also use the\nHeapValidate function to validate a single memory block within a specified heap without checking the validity of the entire heap.", "parameters": [{"name": "hHeap", "type": "", "description": "A handle to the heap to be validated. This handle is returned by either the\nHeapCreate or\nGetProcessHeap function."}, {"name": "dwFlags", "type": "", "description": "The heap access options. This parameter can be the following value."}, {"name": "lpMem", "type": "", "description": "A pointer to a memory block within the specified heap. This parameter may be NULL."}]}, {"name": "HeapWalk", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/heapapi/nf-heapapi-heapwalk", "description": "Enumerates the memory blocks in the specified heap.", "parameters": [{"name": "hHeap", "type": "", "description": "A handle to the heap. This handle is returned by either the\nHeapCreate or\nGetProcessHeap function."}, {"name": "lpEntry", "type": "", "description": "A pointer to a PROCESS_HEAP_ENTRY structure\nthat maintains state information for a particular heap enumeration."}]}, {"name": "CreateProcessA", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-createprocessa", "description": "Creates a new process and its primary thread. The new process runs in the security context of the calling process.", "parameters": [{"name": "lpApplicationName", "type": "", "description": "The name of the module to be executed. This module can be a Windows-based application. It can be some other type of module (for example, MS-DOS or OS/2) if the appropriate subsystem is available on the local computer."}]}, {"name": "CreateProcessAsUserA", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-createprocessasusera", "description": "Creates a new process and its primary thread. The new process runs in the security context of the user represented by the specified token.", "parameters": [{"name": "hToken", "type": "", "description": "A handle to the primary token that represents a user. The handle must have the TOKEN_QUERY, TOKEN_DUPLICATE, and TOKEN_ASSIGN_PRIMARY access rights. For more information, see\nAccess Rights for Access-Token Objects. The user represented by the token must have read and execute access to the application specified by the lpApplicationName or the lpCommandLine parameter."}]}, {"name": "CreateProcessAsUserW", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-createprocessasuserw", "description": "Creates a new process and its primary thread. The new process runs in the security context of the user represented by the specified token.", "parameters": [{"name": "hToken", "type": "", "description": "A handle to the primary token that represents a user. The handle must have the TOKEN_QUERY, TOKEN_DUPLICATE, and TOKEN_ASSIGN_PRIMARY access rights. For more information, see\nAccess Rights for Access-Token Objects. The user represented by the token must have read and execute access to the application specified by the lpApplicationName or the lpCommandLine parameter."}]}, {"name": "CreateProcessW", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-createprocessw", "description": "Creates a new process and its primary thread. The new process runs in the security context of the calling process.", "parameters": [{"name": "lpApplicationName", "type": "", "description": "The name of the module to be executed. This module can be a Windows-based application. It can be some other type of module (for example, MS-DOS or OS/2) if the appropriate subsystem is available on the local computer."}]}, {"name": "CreateRemoteThread", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-createremotethread", "description": "Creates a thread that runs in the virtual address space of another process.", "parameters": [{"name": "hProcess", "type": "", "description": "A handle to the process in which the thread is to be created. The handle must have the PROCESS_CREATE_THREAD, PROCESS_QUERY_INFORMATION, PROCESS_VM_OPERATION, PROCESS_VM_WRITE, and PROCESS_VM_READ access rights, and may fail without these rights on certain platforms. For more information, see\nProcess Security and Access Rights."}, {"name": "lpThreadAttributes", "type": "", "description": "A pointer to a\nSECURITY_ATTRIBUTES structure that specifies a security descriptor for the new thread and determines whether child processes can inherit the returned handle. If lpThreadAttributes is NULL, the thread gets a default security descriptor and the handle cannot be inherited. The access control lists (ACL) in the default security descriptor for a thread come from the primary token of the creator."}]}, {"name": "CreateRemoteThreadEx", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-createremotethreadex", "description": "Creates a thread that runs in the virtual address space of another process and optionally specifies extended attributes such as processor group affinity.", "parameters": [{"name": "hProcess", "type": "", "description": "A handle to the process in which the thread is to be created. The handle must have the PROCESS_CREATE_THREAD, PROCESS_QUERY_INFORMATION, PROCESS_VM_OPERATION, PROCESS_VM_WRITE, and PROCESS_VM_READ access rights. In Windows\u00c2\u00a010, version 1607, your code must obtain these access rights for the new handle. However, starting in Windows\u00c2\u00a010, version 1703, if the new handle is entitled to these access rights, the system obtains them for you. For more information, see\nProcess Security and Access Rights."}, {"name": "lpThreadAttributes", "type": "", "description": "A pointer to a\nSECURITY_ATTRIBUTES structure that specifies a security descriptor for the new thread and determines whether child processes can inherit the returned handle. If lpThreadAttributes is NULL, the thread gets a default security descriptor and the handle cannot be inherited. The access control lists (ACL) in the default security descriptor for a thread come from the primary token of the creator."}, {"name": "dwStackSize", "type": "", "description": "The initial size of the stack, in bytes. The system rounds this value to the nearest page. If this parameter is 0 (zero), the new thread uses the default size for the executable. For more information, see\nThread Stack Size."}, {"name": "lpStartAddress", "type": "", "description": "A pointer to the application-defined function of type LPTHREAD_START_ROUTINE to be executed by the thread and represents the starting address of the thread in the remote process. The function must exist in the remote process. For more information, see\nThreadProc."}, {"name": "lpParameter", "type": "", "description": "A pointer to a variable to be passed to the thread function pointed to by lpStartAddress. This parameter can be NULL."}, {"name": "dwCreationFlags", "type": "", "description": "The flags that control the creation of the thread."}, {"name": "lpAttributeList", "type": "", "description": "An attribute list that contains additional parameters for the new thread. This list is created by the InitializeProcThreadAttributeList function."}, {"name": "lpThreadId", "type": "", "description": "A pointer to a variable that receives the thread identifier."}]}, {"name": "CreateThread", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-createthread", "description": "Creates a thread to execute within the virtual address space of the calling process.", "parameters": [{"name": "lpThreadAttributes", "type": "", "description": "A pointer to a SECURITY_ATTRIBUTES\nstructure that determines whether the returned handle can be inherited by child processes. If\nlpThreadAttributes is NULL, the handle cannot be inherited."}]}, {"name": "DeleteProcThreadAttributeList", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-deleteprocthreadattributelist", "description": "Deletes the specified list of attributes for process and thread creation.", "parameters": [{"name": "lpAttributeList", "type": "", "description": "The attribute list. This list is created by the InitializeProcThreadAttributeList function."}]}, {"name": "ExitProcess", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-exitprocess", "description": "Ends the calling process and all its threads.", "parameters": [{"name": "uExitCode", "type": "", "description": "The exit code for the process and all threads."}]}, {"name": "ExitThread", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-exitthread", "description": "Ends the calling thread.", "parameters": [{"name": "dwExitCode", "type": "", "description": "The exit code for the thread."}]}, {"name": "FlushInstructionCache", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-flushinstructioncache", "description": "Flushes the instruction cache for the specified process.", "parameters": [{"name": "hProcess", "type": "", "description": "A handle to a process whose instruction cache is to be flushed."}, {"name": "lpBaseAddress", "type": "", "description": "A pointer to the base of the region to be flushed. This parameter can be NULL."}, {"name": "dwSize", "type": "", "description": "The size of the region to be flushed if the lpBaseAddress parameter is not NULL, in bytes."}]}, {"name": "FlushProcessWriteBuffers", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-flushprocesswritebuffers", "description": "Flushes the write queue of each processor that is running a thread of the current process.", "parameters": []}, {"name": "GetCurrentProcess", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-getcurrentprocess", "description": "Retrieves a pseudo handle for the current process.", "parameters": []}, {"name": "GetCurrentProcessId", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-getcurrentprocessid", "description": "Retrieves the process identifier of the calling process.", "parameters": []}, {"name": "GetCurrentProcessorNumber", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-getcurrentprocessornumber", "description": "Retrieves the number of the processor the current thread was running on during the call to this function.", "parameters": []}, {"name": "GetCurrentProcessorNumberEx", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-getcurrentprocessornumberex", "description": "Retrieves the processor group and number of the logical processor in which the calling thread is running.", "parameters": [{"name": "ProcNumber", "type": "", "description": "A pointer to a PROCESSOR_NUMBER structure that receives the processor group to which the logical processor is assigned and the number of the logical processor within its group."}]}, {"name": "GetCurrentProcessToken", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-getcurrentprocesstoken", "description": "Retrieves a pseudo-handle that you can use as a shorthand way to refer to the access token associated with a process.", "parameters": []}, {"name": "GetCurrentThread", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-getcurrentthread", "description": "Retrieves a pseudo handle for the calling thread.", "parameters": []}, {"name": "GetCurrentThreadEffectiveToken", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-getcurrentthreadeffectivetoken", "description": "Retrieves a pseudo-handle that you can use as a shorthand way to refer to the token that is currently in effect for the thread, which is the thread token if one exists and the process token otherwise.", "parameters": []}, {"name": "GetCurrentThreadId", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-getcurrentthreadid", "description": "Retrieves the thread identifier of the calling thread.", "parameters": []}, {"name": "GetCurrentThreadStackLimits", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-getcurrentthreadstacklimits", "description": "Retrieves the boundaries of the stack that was allocated by the system for the current thread.", "parameters": [{"name": "LowLimit", "type": "", "description": "A pointer variable that receives the lower boundary of the current thread stack."}, {"name": "HighLimit", "type": "", "description": "A pointer variable that receives the upper boundary of the current thread stack."}]}, {"name": "GetCurrentThreadToken", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-getcurrentthreadtoken", "description": "Retrieves a pseudo-handle that you can use as a shorthand way to refer to the impersonation token that was assigned to the current thread.", "parameters": []}, {"name": "GetExitCodeProcess", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-getexitcodeprocess", "description": "Retrieves the termination status of the specified process.", "parameters": [{"name": "hProcess", "type": "", "description": "A handle to the process."}]}, {"name": "GetExitCodeThread", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-getexitcodethread", "description": "Retrieves the termination status of the specified thread.", "parameters": [{"name": "hThread", "type": "", "description": "A handle to the thread."}]}, {"name": "GetPriorityClass", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-getpriorityclass", "description": "Retrieves the priority class for the specified process. This value, together with the priority value of each thread of the process, determines each thread's base priority level.", "parameters": [{"name": "hProcess", "type": "", "description": "A handle to the process."}]}, {"name": "GetProcessDefaultCpuSetMasks", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-getprocessdefaultcpusetmasks", "description": "Retrieves the list of CPU Sets in the process default set that was set by SetProcessDefaultCpuSetMasks or SetProcessDefaultCpuSets.", "parameters": [{"name": "Process", "type": "", "description": "Specifies a process handle for the process to query. This handle must have the PROCESS_QUERY_LIMITED_INFORMATION access right. The value returned by GetCurrentProcess can also be specified here."}, {"name": "CpuSetMasks", "type": "", "description": "Specifies an optional buffer to retrieve a list of GROUP_AFFINITY structures representing the process default CPU Sets."}, {"name": "CpuSetMaskCount", "type": "", "description": "Specifies the size of the CpuSetMasks array, in elements."}, {"name": "RequiredMaskCount", "type": "", "description": "On successful return, specifies the number of affinity structures written to the array. If the CpuSetMasks array is too small, the function fails with ERROR_INSUFFICIENT_BUFFER and sets the RequiredMaskCount parameter to the number of elements required. The number of required elements is always less than or equal to the maximum group count returned by GetMaximumProcessorGroupCount."}]}, {"name": "GetProcessDefaultCpuSets", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-getprocessdefaultcpusets", "description": "Retrieves the list of CPU Sets in the process default set that was set by SetProcessDefaultCpuSets. If no default CPU Sets are set for a given process, then the RequiredIdCount is set to 0 and the function succeeds.", "parameters": [{"name": "Process", "type": "", "description": "Specifies a process handle for the process to query. This handle must have the PROCESS_QUERY_LIMITED_INFORMATION access right. The value returned by GetCurrentProcess can also be specified here."}, {"name": "CpuSetIds", "type": "", "description": "Specifies an optional buffer to retrieve the list of CPU Set identifiers."}, {"name": "CpuSetIdCount", "type": "", "description": "Specifies the capacity of the buffer specified in CpuSetIds. If the buffer is NULL, this must be 0."}, {"name": "RequiredIdCount", "type": "", "description": "Specifies the required capacity of the buffer to hold the entire list of process default CPU Sets. On successful return, this specifies the number of IDs filled into the buffer."}]}, {"name": "GetProcessHandleCount", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-getprocesshandlecount", "description": "Retrieves the number of open handles  that belong to the specified process.", "parameters": [{"name": "hProcess", "type": "", "description": "A handle to the process whose handle count is being requested.  The\nhandle must have the PROCESS_QUERY_INFORMATION\nor PROCESS_QUERY_LIMITED_INFORMATION access right. For more information, see Process Security and Access Rights."}]}, {"name": "GetProcessId", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-getprocessid", "description": "Retrieves the process identifier of the specified process.", "parameters": [{"name": "Process", "type": "", "description": "A handle to the process. The handle must have the PROCESS_QUERY_INFORMATION or PROCESS_QUERY_LIMITED_INFORMATION access right. For more information, see\nProcess Security and Access Rights."}]}, {"name": "GetProcessIdOfThread", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-getprocessidofthread", "description": "Retrieves the process identifier of the process associated with the specified thread.", "parameters": [{"name": "Thread", "type": "", "description": "A handle to the thread. The handle must have the THREAD_QUERY_INFORMATION or THREAD_QUERY_LIMITED_INFORMATION access right. For more information, see\nThread Security and Access Rights."}]}, {"name": "GetProcessInformation", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-getprocessinformation", "description": "Retrieves information about the specified process.", "parameters": [{"name": "hProcess", "type": "", "description": "A handle to the process. This handle must have the PROCESS_SET_INFORMATION access\nright. For more information, see\nProcess Security and Access Rights."}, {"name": "ProcessInformationClass", "type": "", "description": "A member of the PROCESS_INFORMATION_CLASS enumeration specifying the kind of information to retrieve."}, {"name": "ProcessInformation", "type": "", "description": "Pointer to an object to receive the type of information specified by the\nProcessInformationClass parameter."}]}, {"name": "GetProcessMitigationPolicy", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-getprocessmitigationpolicy", "description": "Retrieves mitigation policy settings for the calling process.", "parameters": [{"name": "hProcess", "type": "", "description": "A handle to the process. This handle must have the PROCESS_QUERY_INFORMATION access right. For more information, see Process Security and Access Rights."}, {"name": "MitigationPolicy", "type": "", "description": "The mitigation policy to retrieve. This parameter can be one of the following values."}, {"name": "lpBuffer", "type": "", "description": "If the MitigationPolicy parameter is ProcessDEPPolicy, this parameter points to a PROCESS_MITIGATION_DEP_POLICY structure that receives the DEP policy flags."}]}, {"name": "GetProcessPriorityBoost", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-getprocesspriorityboost", "description": "Retrieves the priority boost control state of the specified process.", "parameters": [{"name": "hProcess", "type": "", "description": "A handle to the process. This handle must have the PROCESS_QUERY_INFORMATION or PROCESS_QUERY_LIMITED_INFORMATION access right. For more information, see\nProcess Security and Access Rights."}]}, {"name": "GetProcessShutdownParameters", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-getprocessshutdownparameters", "description": "Retrieves the shutdown parameters for the currently calling process.", "parameters": [{"name": "lpdwLevel", "type": "", "description": "A pointer to a variable that receives the shutdown priority level. Higher levels shut down first. System level shutdown orders are reserved for system components. Higher numbers shut down first. Following are the level conventions."}]}, {"name": "GetProcessTimes", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-getprocesstimes", "description": "Retrieves timing information for the specified process.", "parameters": [{"name": "hProcess", "type": "", "description": "A handle to the process whose timing information is sought. The handle must have the PROCESS_QUERY_INFORMATION or PROCESS_QUERY_LIMITED_INFORMATION access right. For more information, see\nProcess Security and Access Rights."}]}, {"name": "GetProcessVersion", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-getprocessversion", "description": "Retrieves the major and minor version numbers of the system on which the specified process expects to run.", "parameters": [{"name": "ProcessId", "type": "", "description": "The process identifier of the process of interest. A value of zero specifies the calling process."}]}, {"name": "GetStartupInfoW", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-getstartupinfow", "description": "Retrieves the contents of the\nSTARTUPINFO structure that was specified when the calling process was created.", "parameters": [{"name": "lpStartupInfo", "type": "", "description": "A pointer to a\nSTARTUPINFO structure that receives the startup information."}]}, {"name": "GetSystemCpuSetInformation", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-getsystemcpusetinformation", "description": "Allows an application to query the available CPU Sets on the system, and their current state.", "parameters": [{"name": "Information", "type": "", "description": "A pointer to a SYSTEM_CPU_SET_INFORMATION structure that receives the CPU Set data. Pass NULL with a buffer length of 0 to determine the required buffer size."}, {"name": "BufferLength", "type": "", "description": "The length, in bytes, of the output buffer passed as the Information argument."}, {"name": "ReturnedLength", "type": "", "description": "The length, in bytes, of the valid data in the output buffer if the buffer is large enough, or the required size of the output buffer. If no CPU Sets exist, this value will be 0."}, {"name": "Process", "type": "", "description": "An optional handle to a process. This process is used to determine the value of the AllocatedToTargetProcess flag in the SYSTEM_CPU_SET_INFORMATION structure. If a CPU Set is allocated to the specified process, the flag is set. Otherwise, it is clear. This handle must have the PROCESS_QUERY_LIMITED_INFORMATION access right. The value returned by GetCurrentProcess may also be specified here."}, {"name": "Flags", "type": "", "description": "Reserved, must be 0."}]}, {"name": "GetSystemTimes", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-getsystemtimes", "description": "Retrieves system timing information.  On a multiprocessor system, the values returned are the sum\nof the designated times across all processors.", "parameters": [{"name": "lpIdleTime", "type": "", "description": "A pointer to a FILETIME structure that receives the amount of time that the system has been idle."}, {"name": "lpKernelTime", "type": "", "description": "A pointer to a FILETIME structure that receives the amount of time that the system has spent executing in Kernel mode (including all threads in all processes, on all processors). This time value also includes the amount of time the system has been idle."}, {"name": "lpUserTime", "type": "", "description": "A pointer to a FILETIME structure that receives the amount of time that the system has spent executing in User mode (including all threads in all processes, on all processors)."}]}, {"name": "GetThreadContext", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-getthreadcontext", "description": "Retrieves the context of the specified thread.", "parameters": [{"name": "hThread", "type": "", "description": "A handle to the thread whose context is to be retrieved. The handle must have THREAD_GET_CONTEXT access to the thread. For more information, see Thread Security and Access Rights."}]}, {"name": "GetThreadDescription", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-getthreaddescription", "description": "Retrieves the description that was assigned to a thread by calling SetThreadDescription.", "parameters": [{"name": "hThread", "type": "", "description": "A handle to the thread for which to retrieve the description. The handle must have THREAD_QUERY_LIMITED_INFORMATION access."}, {"name": "ppszThreadDescription", "type": "", "description": "A Unicode string that contains the description of the thread."}]}, {"name": "GetThreadId", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-getthreadid", "description": "Retrieves the thread identifier of the specified thread.", "parameters": [{"name": "Thread", "type": "", "description": "A handle to the thread. The handle must have the THREAD_QUERY_INFORMATION or THREAD_QUERY_LIMITED_INFORMATION access right. For more information about access rights, see\nThread Security and Access Rights."}]}, {"name": "GetThreadIdealProcessorEx", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-getthreadidealprocessorex", "description": "Retrieves the processor number of the ideal processor for the specified thread.", "parameters": [{"name": "hThread", "type": "", "description": "A handle to the thread for which to retrieve the ideal processor. This handle must have been created with the THREAD_QUERY_LIMITED_INFORMATION access right. For more information, see Thread Security and Access Rights."}, {"name": "lpIdealProcessor", "type": "", "description": "Points to PROCESSOR_NUMBER structure to receive the number of the ideal processor."}]}, {"name": "GetThreadInformation", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-getthreadinformation", "description": "Retrieves information about the specified thread.", "parameters": [{"name": "hThread", "type": "", "description": "A handle to the thread. The handle must have THREAD_QUERY_INFORMATION access rights. For more information, see  Thread Security and Access Rights."}, {"name": "ThreadInformationClass", "type": "", "description": "The class of information to retrieve. The only supported values are ThreadMemoryPriority and ThreadPowerThrottling."}, {"name": "ThreadInformation", "type": "", "description": "Pointer to a structure to receive the type of information specified by the ThreadInformationClass parameter."}]}, {"name": "GetThreadIOPendingFlag", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-getthreadiopendingflag", "description": "Determines whether a specified thread has any I/O requests pending.", "parameters": [{"name": "hThread", "type": "", "description": "A handle to the thread in question. This handle must have been created with the THREAD_QUERY_INFORMATION access right. For more information, see Thread Security and Access Rights."}, {"name": "lpIOIsPending", "type": "", "description": "A pointer to a  variable which the function sets to TRUE if the specified thread has one or more I/O requests pending, or to FALSE otherwise."}]}, {"name": "GetThreadPriority", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-getthreadpriority", "description": "Retrieves the priority value for the specified thread. This value, together with the priority class of the thread's process, determines the thread's base-priority level.", "parameters": [{"name": "hThread", "type": "", "description": "A handle to the thread."}]}, {"name": "GetThreadPriorityBoost", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-getthreadpriorityboost", "description": "Retrieves the priority boost control state of the specified thread.", "parameters": [{"name": "hThread", "type": "", "description": "A handle to the thread. The handle must have the THREAD_QUERY_INFORMATION or THREAD_QUERY_LIMITED_INFORMATION access right. For more information, see\nThread Security and Access Rights."}]}, {"name": "GetThreadSelectedCpuSetMasks", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-getthreadselectedcpusetmasks", "description": "Returns the explicit CPU Set assignment of the specified thread, if any assignment was set using SetThreadSelectedCpuSetMasks or SetThreadSelectedCpuSets.", "parameters": [{"name": "Thread", "type": "", "description": "Specifies the thread for which to query the selected CPU Sets. This handle must have the PROCESS_QUERY_LIMITED_INFORMATION access right. The value returned by GetCurrentProcess can also be specified here."}, {"name": "CpuSetMasks", "type": "", "description": "Specifies an optional buffer to retrieve a list of GROUP_AFFINITY structures representing the thread selected CPU Sets."}, {"name": "CpuSetMaskCount", "type": "", "description": "Specifies the size of the CpuSetMasks array, in elements."}, {"name": "RequiredMaskCount", "type": "", "description": "On successful return, specifies the number of affinity structures written to the array.\nIf the array is too small, the function fails with ERROR_INSUFFICIENT_BUFFER and sets the RequiredMaskCount parameter to the number of elements required.\nThe number of required elements is always less than or equal to the maximum group count returned by GetMaximumProcessorGroupCount."}]}, {"name": "GetThreadSelectedCpuSets", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-getthreadselectedcpusets", "description": "Returns the explicit CPU Set assignment of the specified thread, if any assignment was set using the SetThreadSelectedCpuSets API. If no explicit assignment is set, RequiredIdCount is set to 0 and the function returns TRUE.", "parameters": [{"name": "Thread", "type": "", "description": "Specifies the thread for which to query the selected CPU Sets. This handle must have the THREAD_QUERY_LIMITED_INFORMATION access right. The value returned by GetCurrentThread can also be specified here."}, {"name": "CpuSetIds", "type": "", "description": "Specifies an optional buffer to retrieve the list of CPU Set identifiers."}, {"name": "CpuSetIdCount", "type": "", "description": "Specifies the capacity of the buffer specified in CpuSetIds. If the buffer is NULL, this must be 0."}, {"name": "RequiredIdCount", "type": "", "description": "Specifies the required capacity of the buffer to hold the entire list of thread selected CPU Sets. On successful return, this specifies the number of IDs filled into the buffer."}]}, {"name": "GetThreadTimes", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-getthreadtimes", "description": "Retrieves timing information for the specified thread.", "parameters": [{"name": "hThread", "type": "", "description": "A handle to the thread whose timing information is sought. The handle must have the THREAD_QUERY_INFORMATION or THREAD_QUERY_LIMITED_INFORMATION access right. For more information, see\nThread Security and Access Rights."}]}, {"name": "InitializeProcThreadAttributeList", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-initializeprocthreadattributelist", "description": "Initializes the specified list of attributes for process and thread creation.", "parameters": [{"name": "lpAttributeList", "type": "", "description": "The attribute list. This parameter can be NULL to determine the buffer size required to support the specified number of attributes."}, {"name": "dwAttributeCount", "type": "", "description": "The count of attributes to be added to the list."}, {"name": "dwFlags", "type": "", "description": "This parameter is reserved and must be zero."}, {"name": "lpSize", "type": "", "description": "If lpAttributeList is not NULL, this parameter specifies the size in bytes of the lpAttributeList buffer on input. On output, this parameter receives the size in bytes of the initialized attribute list."}]}, {"name": "IsProcessCritical", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-isprocesscritical", "description": "Determines whether the specified process is considered critical.", "parameters": [{"name": "hProcess", "type": "", "description": "A handle to the process to query. The process must have been          opened with PROCESS_QUERY_LIMITED_INFORMATION access."}, {"name": "Critical", "type": "", "description": "A pointer to the BOOL value this function will use to indicate whether the process          is considered critical."}]}, {"name": "IsProcessorFeaturePresent", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-isprocessorfeaturepresent", "description": "Determines whether the specified processor feature is supported by the current computer.", "parameters": [{"name": "ProcessorFeature", "type": "", "description": "The processor feature to be tested. This parameter can be one of the following values."}]}, {"name": "OpenProcess", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-openprocess", "description": "Opens an existing local process object.", "parameters": [{"name": "dwDesiredAccess", "type": "", "description": "The access to the process object. This access right is checked against the  security descriptor for the process. This parameter can be one or more of the\nprocess access rights."}]}, {"name": "OpenProcessToken", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-openprocesstoken", "description": "The OpenProcessToken function opens the access token associated with a process.", "parameters": [{"name": "ProcessHandle", "type": "", "description": "A handle to the process whose access token is opened. The process must have the PROCESS_QUERY_INFORMATION access permission."}, {"name": "DesiredAccess", "type": "", "description": "Specifies an access mask that specifies the requested types of access to the access token. These requested access types are compared with the discretionary access control list (DACL) of the token to determine which accesses are granted or denied."}]}, {"name": "OpenThread", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-openthread", "description": "Opens an existing thread object.", "parameters": [{"name": "dwDesiredAccess", "type": "", "description": "The access to the thread object. This access right is checked against the security descriptor for the thread. This parameter can be one or more of the\nthread access rights."}]}, {"name": "OpenThreadToken", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-openthreadtoken", "description": "The OpenThreadToken function opens the access token associated with a thread.", "parameters": [{"name": "ThreadHandle", "type": "", "description": "A handle to the thread whose access token is opened."}, {"name": "DesiredAccess", "type": "", "description": "Specifies an access mask that specifies the requested types of access to the access token. These requested access types are reconciled against the token's discretionary access control list (DACL) to determine which accesses are granted or denied."}]}, {"name": "ProcessIdToSessionId", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-processidtosessionid", "description": "Retrieves the Remote Desktop Services session\nassociated with a specified process.", "parameters": [{"name": "dwProcessId", "type": "", "description": "Specifies a process identifier. Use the\nGetCurrentProcessId function to retrieve the\nprocess identifier for the current process."}, {"name": "pSessionId", "type": "", "description": "Pointer to a variable that receives the identifier of the Remote Desktop Services session under which the\nspecified process is running. To retrieve the identifier of the session currently attached to the console, use\nthe WTSGetActiveConsoleSessionId\nfunction."}]}, {"name": "QueryProcessAffinityUpdateMode", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-queryprocessaffinityupdatemode", "description": "Retrieves the affinity update mode of the specified process.", "parameters": [{"name": "hProcess", "type": "", "description": "A handle to the process. The handle must have the PROCESS_QUERY_INFORMATION or PROCESS_QUERY_LIMITED_INFORMATION access right. For more information, see\nProcess Security and Access Rights."}, {"name": "lpdwFlags", "type": "", "description": "The affinity update mode. This parameter can be one of the following values."}]}, {"name": "QueryProtectedPolicy", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-queryprotectedpolicy", "description": "Queries the value associated with a protected policy.", "parameters": [{"name": "PolicyGuid", "type": "", "description": "The globally-unique identifier of the policy to query."}, {"name": "PolicyValue", "type": "", "description": "Receives the value that the supplied policy is set to."}]}, {"name": "QueueUserAPC", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-queueuserapc", "description": "Adds a user-mode asynchronous procedure call (APC) object to the APC queue of the specified thread.", "parameters": [{"name": "pfnAPC", "type": "", "description": "A pointer to the application-supplied APC function to be called when the specified thread performs an alertable wait operation. For more information, see\nAPCProc."}, {"name": "hThread", "type": "", "description": "A handle to the thread. The handle must have the THREAD_SET_CONTEXT access right. For more information, see\nSynchronization Object Security and Access Rights."}, {"name": "dwData", "type": "", "description": "A single value that is passed to the APC function pointed to by the pfnAPC parameter."}]}, {"name": "ResumeThread", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-resumethread", "description": "Decrements a thread's suspend count. When the suspend count is decremented to zero, the execution of the thread is resumed.", "parameters": [{"name": "hThread", "type": "", "description": "A handle to the thread to be restarted."}]}, {"name": "SetPriorityClass", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-setpriorityclass", "description": "Sets the priority class for the specified process. This value together with the priority value of each thread of the process determines each thread's base priority level.", "parameters": [{"name": "hProcess", "type": "", "description": "A handle to the process."}]}, {"name": "SetProcessAffinityUpdateMode", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-setprocessaffinityupdatemode", "description": "Sets the affinity update mode of the specified process.", "parameters": [{"name": "hProcess", "type": "", "description": "A handle to the process. This handle must be returned by the GetCurrentProcess function."}, {"name": "dwFlags", "type": "", "description": "The affinity update mode. This parameter can be one of the following values."}]}, {"name": "SetProcessDefaultCpuSetMasks", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-setprocessdefaultcpusetmasks", "description": "Sets the default CPU Sets assignment for threads in the specified process.", "parameters": [{"name": "Process", "type": "", "description": "Specifies the process for which to set the default CPU Sets. This handle must have the PROCESS_SET_LIMITED_INFORMATION access right. The value returned by GetCurrentProcess can also be specified here."}, {"name": "CpuSetMasks", "type": "", "description": "Specifies an optional buffer of GROUP_AFFINITY structures representing the CPU Sets to set as the process default CPU set. If this is NULL, the SetProcessDefaultCpuSetMasks function clears out any assignment."}, {"name": "CpuSetMaskCount", "type": "", "description": "Specifies the size of the CpuSetMasks array, in elements. If the buffer is NULL, this value must be zero."}]}, {"name": "SetProcessDefaultCpuSets", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-setprocessdefaultcpusets", "description": "Sets the default CPU Sets assignment for threads in the specified process. Threads that are created, which don\u00e2\u0080\u0099t have CPU Sets explicitly set using SetThreadSelectedCpuSets, will inherit the sets specified by SetProcessDefaultCpuSets automatically.", "parameters": [{"name": "Process", "type": "", "description": "Specifies the process for which to set the default CPU Sets. This handle must have the PROCESS_SET_LIMITED_INFORMATION access right. The value returned by GetCurrentProcess can also be specified here."}, {"name": "CpuSetIds", "type": "", "description": "Specifies the list of CPU Set IDs to set as the process default CPU set. If this is NULL, the SetProcessDefaultCpuSets clears out any assignment."}, {"name": "CpuSetIdCount", "type": "", "description": "Specifies the number of IDs in the list passed in the CpuSetIds argument. If that value is NULL, this should be 0."}]}, {"name": "SetProcessDynamicEHContinuationTargets", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-setprocessdynamicehcontinuationtargets", "description": "Sets dynamic exception handling continuation targets for the specified process.", "parameters": [{"name": "Process", "type": "", "description": "A handle to the process. This handle must have the PROCESS_SET_INFORMATION access right.\nFor more information, see Process Security and Access Rights."}, {"name": "NumberOfTargets", "type": "", "description": "Supplies the number of dynamic exception handling continuation targets to set."}, {"name": "Targets", "type": "", "description": "A pointer to an array of dynamic exception handling continuation targets. For more information on this structure, see PROCESS_DYNAMIC_EH_CONTINUATION_TARGET."}]}, {"name": "SetProcessDynamicEnforcedCetCompatibleRanges", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-setprocessdynamicenforcedcetcompatibleranges", "description": "Sets dynamic enforced CETCOMPAT ranges for the specified process.", "parameters": [{"name": "Process", "type": "", "description": "A handle to the process. This handle must have the PROCESS_SET_INFORMATION access right.\nFor more information, see Process Security and Access Rights."}, {"name": "NumberOfRanges", "type": "", "description": "Supplies the number of dynamic enforced CETCOMPAT ranges to set."}, {"name": "Ranges", "type": "", "description": "A pointer to an array of dynamic enforced CETCOMPAT ranges. For more information on this structure, see PROCESS_DYNAMIC_ENFORCED_ADDRESS_RANGE."}]}, {"name": "SetProcessInformation", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-setprocessinformation", "description": "Sets information for the specified process.", "parameters": [{"name": "hProcess", "type": "", "description": "A handle to the process. This handle must have the PROCESS_SET_INFORMATION access\nright. For more information, see\nProcess Security and Access Rights."}, {"name": "ProcessInformationClass", "type": "", "description": "A member of the PROCESS_INFORMATION_CLASS enumeration specifying the kind of information to set."}, {"name": "ProcessInformation", "type": "", "description": "Pointer to an object that contains the type of information specified by the\nProcessInformationClass parameter."}]}, {"name": "SetProcessMitigationPolicy", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-setprocessmitigationpolicy", "description": "Sets a mitigation policy for the calling process. Mitigation policies enable a process to harden itself against various types of attacks.", "parameters": [{"name": "MitigationPolicy", "type": "", "description": "The mitigation policy to apply. This parameter can be one of the following values."}, {"name": "lpBuffer", "type": "", "description": "If the MitigationPolicy parameter is ProcessDEPPolicy, this parameter points to a PROCESS_MITIGATION_DEP_POLICY structure that specifies the DEP policy flags."}]}, {"name": "SetProcessPriorityBoost", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-setprocesspriorityboost", "description": "Disables or enables the ability of the system to temporarily boost the priority of the threads of the specified process.", "parameters": [{"name": "hProcess", "type": "", "description": "A handle to the process. This handle must have the PROCESS_SET_INFORMATION access right. For more information, see\nProcess Security and Access Rights."}, {"name": "bDisablePriorityBoost", "type": "", "description": "If this parameter is TRUE, dynamic boosting is disabled. If the parameter is FALSE, dynamic boosting is enabled."}]}, {"name": "SetProcessShutdownParameters", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-setprocessshutdownparameters", "description": "Sets shutdown parameters for the currently calling process. This function sets a shutdown order for a process relative to the other processes in the system.", "parameters": [{"name": "dwLevel", "type": "", "description": "The shutdown priority for a process relative to other processes in the system. The system shuts down processes from high dwLevel values to low. The highest and lowest shutdown priorities are reserved for system components. This parameter must be in the following range of values."}]}, {"name": "SetProtectedPolicy", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-setprotectedpolicy", "description": "Sets a protected policy. This function is for use primarily by Windows, and not designed for external use.", "parameters": [{"name": "PolicyGuid", "type": "", "description": "The globally-unique identifier of the policy to set."}, {"name": "PolicyValue", "type": "", "description": "The value to set the policy to."}, {"name": "OldPolicyValue", "type": "", "description": "Optionally receives the original value that was associated with the supplied policy."}]}, {"name": "SetThreadContext", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-setthreadcontext", "description": "Sets the context for the specified thread.", "parameters": [{"name": "hThread", "type": "", "description": "A handle to the thread whose context is to be set. The handle must have the\nTHREAD_SET_CONTEXT access right to the thread. For more information, see\nThread Security and Access Rights."}, {"name": "lpContext", "type": "", "description": "A pointer to a CONTEXT structure that contains the\ncontext to be set in the specified thread. The value of the ContextFlags member of\nthis structure specifies which portions of a thread's context to set. Some values in the\nCONTEXT structure that cannot be specified are silently\nset to the correct value. This includes bits in the CPU status register that specify the privileged processor\nmode, global enabling bits in the debugging register, and other states that must be controlled by the operating\nsystem."}]}, {"name": "SetThreadDescription", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-setthreaddescription", "description": "Assigns a description to a thread.", "parameters": [{"name": "hThread", "type": "", "description": "A handle for the thread for which you want to set the description. The handle must have THREAD_SET_LIMITED_INFORMATION access."}, {"name": "lpThreadDescription", "type": "", "description": "A Unicode string that specifies the description of the thread."}]}, {"name": "SetThreadIdealProcessor", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-setthreadidealprocessor", "description": "Sets a preferred processor for a thread. The system schedules threads on their preferred processors whenever possible.", "parameters": [{"name": "hThread", "type": "", "description": "A handle to the thread whose preferred processor is to be set. The handle must have the THREAD_SET_INFORMATION access right. For more information, see\nThread Security and Access Rights."}, {"name": "dwIdealProcessor", "type": "", "description": "The number of the preferred processor for the thread. This value is zero-based. If this parameter is MAXIMUM_PROCESSORS, the function returns the current ideal processor without changing it."}]}, {"name": "SetThreadIdealProcessorEx", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-setthreadidealprocessorex", "description": "Sets the ideal processor for the specified thread and optionally retrieves the previous ideal processor.", "parameters": [{"name": "hThread", "type": "", "description": "A handle to the thread for which to set the ideal processor. This handle must have been created with the THREAD_SET_INFORMATION access right. For more information, see Thread Security and Access Rights."}, {"name": "lpIdealProcessor", "type": "", "description": "A pointer to a PROCESSOR_NUMBER structure that specifies the processor number of the desired ideal processor."}, {"name": "lpPreviousIdealProcessor", "type": "", "description": "A pointer to a PROCESSOR_NUMBER structure to receive the previous ideal processor. This parameter can point to the same memory location as the lpIdealProcessor parameter. This parameter can be NULL if the previous ideal processor is not required."}]}, {"name": "SetThreadInformation", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-setthreadinformation", "description": "Sets information for the specified thread.", "parameters": [{"name": "hThread", "type": "", "description": "A handle to the thread. The handle must have THREAD_SET_INFORMATION access right. For more information, see  Thread Security and Access Rights."}, {"name": "ThreadInformationClass", "type": "", "description": "The class of information to set. The only supported values are ThreadMemoryPriority and ThreadPowerThrottling."}, {"name": "ThreadInformation", "type": "", "description": "Pointer to a structure that contains the type of information specified by the ThreadInformationClass parameter."}]}, {"name": "SetThreadPriority", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-setthreadpriority", "description": "Sets the priority value for the specified thread. This value, together with the priority class of the thread's process, determines the thread's base priority level.", "parameters": [{"name": "hThread", "type": "", "description": "A handle to the thread whose priority value is to be set."}]}, {"name": "SetThreadPriorityBoost", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-setthreadpriorityboost", "description": "Disables or enables the ability of the system to temporarily boost the priority of a thread.", "parameters": [{"name": "hThread", "type": "", "description": "A handle to the thread whose priority is to be boosted. The handle must have the THREAD_SET_INFORMATION or THREAD_SET_LIMITED_INFORMATION access right. For more information, see\nThread Security and Access Rights."}]}, {"name": "SetThreadSelectedCpuSetMasks", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-setthreadselectedcpusetmasks", "description": "Sets the selected CPU Sets assignment for the specified thread. This assignment overrides the process default assignment, if one is set.", "parameters": [{"name": "Thread", "type": "", "description": "Specifies the thread on which to set the CPU Set assignment. PROCESS_SET_LIMITED_INFORMATION access right. The value returned by GetCurrentProcess can also be specified here."}, {"name": "CpuSetMasks", "type": "", "description": "Specifies an optional buffer of GROUP_AFFINITY structures representing the CPU Sets to set as the thread selected CPU set. If this is NULL, the SetThreadSelectedCpuSetMasks function clears out any assignment, reverting to process default assignment if one is set."}, {"name": "CpuSetMaskCount", "type": "", "description": "Specifies the number of GROUP_AFFINITY structures in the list passed in the GroupCpuSets argument. If the buffer is NULL, this value must be zero."}]}, {"name": "SetThreadSelectedCpuSets", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-setthreadselectedcpusets", "description": "Sets the selected CPU Sets assignment for the specified thread. This assignment overrides the process default assignment, if one is set.", "parameters": [{"name": "Thread", "type": "", "description": "Specifies the thread on which to set the CPU Set assignment. This handle must have the THREAD_SET_LIMITED_INFORMATION access right. The value returned by GetCurrentThread can also be used."}, {"name": "CpuSetIds", "type": "", "description": "Specifies the list of CPU Set IDs to set as the thread selected CPU set. If this is NULL, the API clears out any assignment, reverting to process default assignment if one is set."}, {"name": "CpuSetIdCount", "type": "", "description": "Specifies the number of IDs in the list passed in the CpuSetIds argument. If that value is NULL, this should be 0."}]}, {"name": "SetThreadStackGuarantee", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-setthreadstackguarantee", "description": "Sets the minimum size of the stack associated with the calling thread or fiber that will be available during any stack overflow exceptions. This is useful for handling stack overflow exceptions; the application can safely use the specified number of bytes during exception handling.", "parameters": [{"name": "StackSizeInBytes", "type": "", "description": "The size of the stack, in bytes. On return, this value is set to the size of the previous stack, in bytes."}]}, {"name": "SetThreadToken", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-setthreadtoken", "description": "The SetThreadToken function assigns an impersonation token to a thread. The function can also cause a thread to stop using an impersonation token.", "parameters": [{"name": "Thread", "type": "", "description": "A pointer to a handle to the thread to which the function assigns the impersonation token."}]}, {"name": "SuspendThread", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-suspendthread", "description": "Suspends the specified thread.", "parameters": [{"name": "hThread", "type": "", "description": "A handle to the thread that is to be suspended."}]}, {"name": "SwitchToThread", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-switchtothread", "description": "Causes the calling thread to yield execution to another thread that is ready to run on the current processor. The operating system selects the next thread to be executed.", "parameters": []}, {"name": "TerminateProcess", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-terminateprocess", "description": "Terminates the specified process and all of its threads.", "parameters": [{"name": "hProcess", "type": "", "description": "A handle to the process to be terminated."}]}, {"name": "TerminateThread", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-terminatethread", "description": "Terminates a thread.", "parameters": [{"name": "hThread", "type": "", "description": "A handle to the thread to be terminated."}]}, {"name": "TlsAlloc", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-tlsalloc", "description": "Allocates a thread local storage (TLS) index. Any thread of the process can subsequently use this index to store and retrieve values that are local to the thread, because each thread receives its own slot for the index.", "parameters": []}, {"name": "TlsFree", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-tlsfree", "description": "Releases a thread local storage (TLS) index, making it available for reuse.", "parameters": [{"name": "dwTlsIndex", "type": "", "description": "The TLS index that was allocated by the\nTlsAlloc function."}]}, {"name": "TlsGetValue", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-tlsgetvalue", "description": "Retrieves the value in the calling thread's thread local storage (TLS) slot for the specified TLS index. Each thread of a process has its own slot for each TLS index.", "parameters": [{"name": "dwTlsIndex", "type": "", "description": "The TLS index that was allocated by the\nTlsAlloc function."}]}, {"name": "TlsSetValue", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-tlssetvalue", "description": "Stores a value in the calling thread's thread local storage (TLS) slot for the specified TLS index. Each thread of a process has its own slot for each TLS index.", "parameters": [{"name": "dwTlsIndex", "type": "", "description": "The TLS index that was allocated by the TlsAlloc\nfunction."}, {"name": "lpTlsValue", "type": "", "description": "The value to be stored in the calling thread's TLS slot for the index."}]}, {"name": "UpdateProcThreadAttribute", "return_type": "", "msdn": "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-updateprocthreadattribute", "description": "Updates the specified attribute in a list of attributes for process and thread creation.", "parameters": [{"name": "lpAttributeList", "type": "", "description": "A pointer to an attribute list created by the InitializeProcThreadAttributeList function."}, {"name": "dwFlags", "type": "", "description": "This parameter is reserved and must be zero."}, {"name": "Attribute", "type": "", "description": "The attribute key to update in the attribute list. This parameter can be one of the following values."}, {"name": "lpValue", "type": "", "description": "A pointer to the attribute value. This value should persist until the attribute is destroyed using the DeleteProcThreadAttributeList function."}, {"name": "cbSize", "type": "", "description": "The size of the attribute value specified by the lpValue parameter."}, {"name": "lpPreviousValue", "type": "", "description": "This parameter is reserved and must be NULL."}, {"name": "lpReturnSize", "type": "", "description": "This parameter is reserved and must be NULL."}]}]}